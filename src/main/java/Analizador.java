/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
/**
 *
 * @author jealv
 */
public class Analizador extends javax.swing.JFrame {

    /**
     * Creates new form Analizador
     */
    private java.io.File currentFile;
    public Analizador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_area = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        lblLongitud = new javax.swing.JLabel();
        lblUltimaPalabra = new javax.swing.JLabel();
        lblPalabraCentral = new javax.swing.JLabel();
        lblPrimeraPalabra = new javax.swing.JLabel();
        lblLetraCentral = new javax.swing.JLabel();
        lblUltimaLetra = new javax.swing.JLabel();
        lblTotalPalabras = new javax.swing.JLabel();
        lblPrimeraLetra = new javax.swing.JLabel();
        btn_procesar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt_claveMurcielago = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        archivo_menu = new javax.swing.JMenu();
        abrir_menu = new javax.swing.JMenuItem();
        guardar_menu = new javax.swing.JMenuItem();
        guardar_como_menu = new javax.swing.JMenuItem();
        editar_menu = new javax.swing.JMenu();
        copiar_menu = new javax.swing.JMenuItem();
        cortar_menu = new javax.swing.JMenuItem();
        pegar_menu = new javax.swing.JMenuItem();
        buscar_menu = new javax.swing.JMenuItem();
        reemplazar_menu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_area.setColumns(20);
        txt_area.setRows(5);
        jScrollPane1.setViewportView(txt_area);

        lblLongitud.setText("Longitud del texto:");

        lblUltimaPalabra.setText("Última palabra:");

        lblPalabraCentral.setText("Palabra central:");

        lblPrimeraPalabra.setText("Primera palabra: ");

        lblLetraCentral.setText("Letra central del texto:");

        lblUltimaLetra.setText("Última letra del texto:");

        lblTotalPalabras.setText("Total de palabras:");

        lblPrimeraLetra.setText("Primer letra del texto:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotalPalabras, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrimeraLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUltimaLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLetraCentral, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUltimaPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPalabraCentral, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrimeraPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLongitud)
                    .addComponent(lblPrimeraPalabra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalPalabras)
                    .addComponent(lblPalabraCentral))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUltimaPalabra)
                    .addComponent(lblPrimeraLetra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUltimaLetra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLetraCentral)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        btn_procesar.setText("Procesar");
        btn_procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_procesarActionPerformed(evt);
            }
        });

        txt_claveMurcielago.setColumns(20);
        txt_claveMurcielago.setRows(5);
        jScrollPane3.setViewportView(txt_claveMurcielago);

        archivo_menu.setText("Archivo");

        abrir_menu.setText("Abrir");
        abrir_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrir_menuActionPerformed(evt);
            }
        });
        archivo_menu.add(abrir_menu);

        guardar_menu.setText("Guardar");
        guardar_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar_menuActionPerformed(evt);
            }
        });
        archivo_menu.add(guardar_menu);

        guardar_como_menu.setText("Guardar Como");
        guardar_como_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar_como_menuActionPerformed(evt);
            }
        });
        archivo_menu.add(guardar_como_menu);

        jMenuBar1.add(archivo_menu);

        editar_menu.setText("Editar");

        copiar_menu.setText("Copiar");
        copiar_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiar_menuActionPerformed(evt);
            }
        });
        editar_menu.add(copiar_menu);

        cortar_menu.setText("Cortar");
        cortar_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cortar_menuActionPerformed(evt);
            }
        });
        editar_menu.add(cortar_menu);

        pegar_menu.setText("Pegar");
        pegar_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegar_menuActionPerformed(evt);
            }
        });
        editar_menu.add(pegar_menu);

        buscar_menu.setText("Buscar");
        buscar_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar_menuActionPerformed(evt);
            }
        });
        editar_menu.add(buscar_menu);

        reemplazar_menu.setText("Reemplazar");
        reemplazar_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reemplazar_menuActionPerformed(evt);
            }
        });
        editar_menu.add(reemplazar_menu);

        jMenuBar1.add(editar_menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(216, 216, 216)
                                .addComponent(btn_procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardar_como_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar_como_menuActionPerformed
if (txt_area.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El área de texto está vacía. No hay contenido para guardar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }    
        
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            currentFile = fileChooser.getSelectedFile();
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(currentFile))) {
                writer.write(txt_area.getText());
                JOptionPane.showMessageDialog(this, "Archivo guardado exitosamente");
            } catch (IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al guardar el archivo", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    
    private String convertirAMurcielago(String texto) {
        return texto.replace("m", "0").replace("u", "1").replace("r", "2").replace("c", "3").replace("i", "4")
                    .replace("e", "5").replace("l", "6").replace("a", "7").replace("g", "8").replace("o", "9")
                    .replace("M", "0").replace("U", "1").replace("R", "2").replace("C", "3").replace("I", "4")
                    .replace("E", "5").replace("L", "6").replace("A", "7").replace("G", "8").replace("O", "9");
    }

    
    private void calcularEstadisticas(String texto) {
        
        int longitud = texto.length();

        
        String[] palabras = texto.split("\\s+");
        int totalPalabras = palabras.length;

       
        String primeraPalabra = palabras[0];
        String ultimaPalabra = palabras[totalPalabras - 1];
        String palabraCentral = palabras[totalPalabras / 2];

        
        char primeraLetra = texto.charAt(0);
        char ultimaLetra = texto.charAt(longitud - 1);
        char letraCentral = texto.charAt(longitud / 2);

       
        lblLongitud.setText("Longitud del texto: " + longitud);
        lblTotalPalabras.setText("Total de palabras: " + totalPalabras);
        lblPrimeraPalabra.setText("Primera palabra: " + primeraPalabra);
        lblUltimaPalabra.setText("Última palabra: " + ultimaPalabra);
        lblPalabraCentral.setText("Palabra central: " + palabraCentral);
        lblPrimeraLetra.setText("Primer letra del texto: " + primeraLetra);
        lblUltimaLetra.setText("Última letra del texto: " + ultimaLetra);
        lblLetraCentral.setText("Letra central del texto: " + letraCentral);
    }//GEN-LAST:event_guardar_como_menuActionPerformed

    private void cortar_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cortar_menuActionPerformed
         txt_area.cut();
    }//GEN-LAST:event_cortar_menuActionPerformed

    private void reemplazar_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reemplazar_menuActionPerformed
         String palabraBuscar = JOptionPane.showInputDialog(this, "Ingrese la palabra a reemplazar:");
    if (palabraBuscar != null && !palabraBuscar.isEmpty()) {
        String palabraReemplazo = JOptionPane.showInputDialog(this, "Ingrese la nueva palabra:");
        if (palabraReemplazo != null) {
            String texto = txt_area.getText();
           
            String nuevoTexto = texto.replace(palabraBuscar, palabraReemplazo);
            txt_area.setText(nuevoTexto); 
            JOptionPane.showMessageDialog(this, "Reemplazo completado.");
        }
    }
    }//GEN-LAST:event_reemplazar_menuActionPerformed

    private void abrir_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrir_menuActionPerformed
         JFileChooser fileChooser = new JFileChooser();
    int result = fileChooser.showOpenDialog(this);
    if (result == JFileChooser.APPROVE_OPTION) {
        java.io.File file = fileChooser.getSelectedFile();
        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            txt_area.setText(""); 
            String line;
            while ((line = reader.readLine()) != null) {
                txt_area.append(line + "\n");
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al leer el archivo", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_abrir_menuActionPerformed

    private void guardar_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar_menuActionPerformed
       if (txt_area.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "El área de texto está vacía. No hay contenido para guardar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }
        
        Object currentFile = null;
   if (currentFile != null) {
    try (BufferedWriter writer = new BufferedWriter(new FileWriter((String) currentFile))) {
        writer.write(txt_area.getText());
        JOptionPane.showMessageDialog(this, "Archivo guardado exitosamente");
    } catch (IOException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al guardar el archivo", "Error", JOptionPane.ERROR_MESSAGE);
    }
} else {
    guardar_como_menuActionPerformed(evt);
}

    }//GEN-LAST:event_guardar_menuActionPerformed

    private void copiar_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiar_menuActionPerformed
        txt_area.copy();
    }//GEN-LAST:event_copiar_menuActionPerformed

    private void pegar_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegar_menuActionPerformed
        txt_area.paste();
    }//GEN-LAST:event_pegar_menuActionPerformed

    private void buscar_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar_menuActionPerformed
           String palabra = JOptionPane.showInputDialog(this, "Ingrese la palabra a buscar:");
    if (palabra != null && !palabra.isEmpty()) {
        String texto = txt_area.getText();
        int index = texto.indexOf(palabra); 

        if (index >= 0) {
            txt_area.requestFocus();
            txt_area.select(index, index + palabra.length()); 
            JOptionPane.showMessageDialog(this, "Palabra encontrada.");
        } else {
            JOptionPane.showMessageDialog(this, "Palabra no encontrada.");
        }
    }
    }//GEN-LAST:event_buscar_menuActionPerformed

    private void btn_procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_procesarActionPerformed
           if (txt_area.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "El área de texto está vacía.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }

   
    String textoOriginal = txt_area.getText();

    
    String textoConvertido = convertirAMurcielago(textoOriginal);
    txt_claveMurcielago.setText(textoConvertido); 

    
    calcularEstadisticas(textoOriginal);

    
    JOptionPane.showMessageDialog(this, "Traducción y cálculo de estadísticas completados.");
    }//GEN-LAST:event_btn_procesarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Analizador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrir_menu;
    private javax.swing.JMenu archivo_menu;
    private javax.swing.JButton btn_procesar;
    private javax.swing.JMenuItem buscar_menu;
    private javax.swing.JMenuItem copiar_menu;
    private javax.swing.JMenuItem cortar_menu;
    private javax.swing.JMenu editar_menu;
    private javax.swing.JMenuItem guardar_como_menu;
    private javax.swing.JMenuItem guardar_menu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblLetraCentral;
    private javax.swing.JLabel lblLongitud;
    private javax.swing.JLabel lblPalabraCentral;
    private javax.swing.JLabel lblPrimeraLetra;
    private javax.swing.JLabel lblPrimeraPalabra;
    private javax.swing.JLabel lblTotalPalabras;
    private javax.swing.JLabel lblUltimaLetra;
    private javax.swing.JLabel lblUltimaPalabra;
    private javax.swing.JMenuItem pegar_menu;
    private javax.swing.JMenuItem reemplazar_menu;
    private javax.swing.JTextArea txt_area;
    private javax.swing.JTextArea txt_claveMurcielago;
    // End of variables declaration//GEN-END:variables
}
